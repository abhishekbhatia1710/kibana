/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Risk Scoring API
 *   version: 1
 */

import { z } from '@kbn/zod';

export type InitRiskEngineResult = z.infer<typeof InitRiskEngineResult>;
export const InitRiskEngineResult = z.object({
  risk_engine_enabled: z.boolean(),
  risk_engine_resources_installed: z.boolean(),
  risk_engine_configuration_created: z.boolean(),
  legacy_risk_engine_disabled: z.boolean(),
  errors: z.array(z.string()),
});

export type InitRiskEngineErrorResponse = z.infer<typeof InitRiskEngineErrorResponse>;
export const InitRiskEngineErrorResponse = z.object({
  message: z.string(),
  full_error: z.string(),
});

export type InitRiskEngineRequestBody = z.infer<typeof InitRiskEngineRequestBody>;
export const InitRiskEngineRequestBody = z.object({
  /**
   * If true, it will include closed alerts for risk score calculation
   */
  includeClosedAlerts: z.boolean().optional().default(false),
  range: z
    .object({
      start: z.string().optional(),
      end: z.string().optional(),
    })
    .optional(),
});
export type InitRiskEngineRequestBodyInput = z.input<typeof InitRiskEngineRequestBody>;

export type InitRiskEngineResponse = z.infer<typeof InitRiskEngineResponse>;
export const InitRiskEngineResponse = z.object({
  result: InitRiskEngineResult,
});
