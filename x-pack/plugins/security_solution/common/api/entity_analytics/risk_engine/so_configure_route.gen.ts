/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Risk Engine API
 *   version: 2023-10-31
 */

import { z } from '@kbn/zod';

export type ConfigureRiskEngineRequest = z.infer<typeof ConfigureRiskEngineRequest>;
export const ConfigureRiskEngineRequest = z.object({
  dataViewId: z.string().optional(),
  enabled: z.boolean().optional(),
  filter: z.object({}).optional(),
  identifierType: z.string().optional(),
  interval: z.string().optional(),
  pageSize: z.number().int().optional(),
  alertSampleSizePerShard: z.number().int().optional(),
  range: z
    .object({
      start: z.string().optional(),
      end: z.string().optional(),
    })
    .optional(),
  excludeAlertStatuses: z
    .array(z.enum(['open', 'closed', 'in-progress', 'acknowledged']))
    .optional(),
  excludeAlertTags: z
    .array(z.enum(['Duplicate', 'False Positive', 'Futher investigation required']))
    .optional(),
  includeClosedAlerts: z.boolean().optional(),
});

export type ConfigureRiskEngineResponse = z.infer<typeof ConfigureRiskEngineResponse>;
export const ConfigureRiskEngineResponse = z.object({
  configuration_successful: z.boolean().optional(),
});

export type ConfigureRiskEngineSavedObjectRequestBody = z.infer<
  typeof ConfigureRiskEngineSavedObjectRequestBody
>;
export const ConfigureRiskEngineSavedObjectRequestBody = ConfigureRiskEngineRequest;
export type ConfigureRiskEngineSavedObjectRequestBodyInput = z.input<
  typeof ConfigureRiskEngineSavedObjectRequestBody
>;

export type ConfigureRiskEngineSavedObjectResponse = z.infer<
  typeof ConfigureRiskEngineSavedObjectResponse
>;
export const ConfigureRiskEngineSavedObjectResponse = ConfigureRiskEngineResponse;
